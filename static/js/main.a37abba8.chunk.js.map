{"version":3,"sources":["StudentMentorApp/Mentor.js","StudentMentorApp/Student.js","StudentMentorApp/Mapaction.js","StudentMentorApp/MappedResults.js","App.js","reportWebVitals.js","index.js"],"names":["Mentors","props","React","useState","text","setText","className","htmlFor","type","id","value","onChange","e","target","onClick","saveMentor","mentors","map","i","index","name","students","a","b","Students","visible","setVisible","mapStudent","selectId","document","getElementById","fetch","method","window","location","reload","setTimeout","Alert","color","isOpen","toggle","saveStudent","Mapaction","mentor","setMentor","useEffect","then","data","json","MappedResults","length","console","log","mentorId","App","setMentors","setStudents","mappedsStudents","setMappedStudents","concat","filter","availability","val","headers","body","JSON","stringify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a37abba8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Mentors = (props) => {\r\n    const [text, setText] = React.useState('')\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"card-title\">\r\n                            <p className=\"h3\">Create Mentors</p>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"card-text\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <label htmlFor=\"mName\">Mentor Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id='name'\r\n                                        className=\"form-control\"\r\n                                        value={text}\r\n                                        onChange={(e) => {\r\n                                            setText(e.target.value)\r\n                                        }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row justify-content-center mt-3\">\r\n                                <div className=\"col-sm-6 text-center\">\r\n                                    <button className=\"btn btn-success\" onClick={() => {\r\n                                        props.saveMentor(text)\r\n                                    }}>Create</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card mt-3\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"card-title\">\r\n                            Available Mentors\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"card-text\">\r\n                            <table className=\"table table-striped table-bordered\">\r\n                                <thead className='thead-dark'>\r\n                                    <tr>\r\n                                        <th className=\"text-center\">Mentor Name</th>\r\n                                        <th className=\"text-center\">Students</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {props.mentors.map((i, index) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n                                                <td className=\"text-center\">{i.name}</td>\r\n                                                <td className=\"text-center\">\r\n                                                    <table className=\"table table-bordered table-striped\">\r\n                                                        <tbody>\r\n                                                            {i.students.map((a, b) => {\r\n                                                                return (\r\n                                                                    <tr key={b}>\r\n                                                                        <td className=\"text-center\">\r\n                                                                            {a.name}\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                )\r\n                                                            })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Alert } from 'reactstrap';\r\n\r\nexport const Students = (props) => {\r\n    const [text, setText] = React.useState('');\r\n    const [visible, setVisible] = React.useState(false);\r\n    const onDismiss = () => setVisible(false);\r\n    const mapStudent = async (id, selectId) => {\r\n        let value = document.getElementById(selectId).value\r\n        if (value !== '') {\r\n            await fetch('https://hidden-plains-54398.herokuapp.com/student/' + id + '/' + value, {\r\n                method: \"put\"\r\n            });\r\n            window.location.reload();\r\n        } else {\r\n            setVisible(true);\r\n            setTimeout(() => {\r\n                setVisible(false);\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            < Alert color='primary' isOpen={visible} toggle={onDismiss}> Please select a mentor</Alert >\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"card-title\">\r\n                                <p className=\"h3\">Create Students</p>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"card-text\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-12\">\r\n                                        <label htmlFor=\"name\">Student Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id='name'\r\n                                            className=\"form-control\"\r\n                                            value={text}\r\n                                            onChange={(e) => {\r\n                                                setText(e.target.value)\r\n                                            }} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center mt-3\">\r\n                                    <div className=\"col-sm-6 text-center\">\r\n                                        <button className=\"btn btn-success\" onClick={() => {\r\n                                            props.saveStudent(text)\r\n                                        }}>Create</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card mt-3\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"card-title\">\r\n                                Available Students\r\n                        </div>\r\n                            <hr />\r\n                            <div className=\"card-text\">\r\n                                <table className=\"table table-striped\">\r\n                                    <thead className='thead-dark'>\r\n                                        <tr>\r\n                                            <th className=\"text-center\">Student Name</th>\r\n                                            <th className=\"text-center\">Available Mentors</th>\r\n                                            <th className=\"text-center\">Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {props.students.map((i, index) => {\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td className=\"text-center\">{i.name}</td>\r\n                                                    <td className=\"text-center\">\r\n                                                        <select name=\"stu\" id={\"stu\" + index} className=\"form-control\">\r\n                                                            <option value=\"\">--Select--</option>\r\n                                                            {props.mentors.map((a, b) => {\r\n                                                                return (\r\n                                                                    <option value={a.id} key={b}>{a.name}</option>\r\n                                                                )\r\n                                                            })}\r\n                                                        </select>\r\n                                                    </td>\r\n                                                    <td className=\"text-center\">\r\n                                                        <button className=\"btn btn-block btn-success\" onClick={() => {\r\n                                                            mapStudent(i.id, 'stu' + index)\r\n                                                        }}>Map</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Mapaction = (props) => {\r\n\r\n    let [mentor, setMentor] = React.useState({});\r\n    React.useEffect(() => {\r\n        fetch('https://hidden-plains-54398.herokuapp.com/mentor/' + props.mentor).then((data) => data.json())\r\n            .then((data) =>\r\n                setMentor(data)\r\n            )\r\n    })\r\n    return (\r\n        <>\r\n            <td className=\"text-center\">{mentor.name}</td>\r\n        </>\r\n    )\r\n} ","import { Mapaction } from \"./Mapaction\"\r\n\r\nexport const MappedResults = (props) => {\r\n\r\n    if (props.students.length) {\r\n        console.log(props.students)\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"card-title\">\r\n                        <p className=\"h3\">Mapped Results</p>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"card-text\">\r\n                        <table className=\"table table-striped\">\r\n                            <thead className=\"thead-dark\">\r\n                                <tr>\r\n                                    <th className=\"text-center\">Student Name</th>\r\n                                    <th className=\"text-center\">Mapped Mentor</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {props.students.map((i, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td className=\"text-center\">{i.name}</td>\r\n                                            <Mapaction mentor={i.mentorId} />\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"\"></div>\r\n        )\r\n    }\r\n}","import './App.css';\nimport { Alert } from 'reactstrap';\nimport { Mentors } from './StudentMentorApp/Mentor';\nimport { Students } from './StudentMentorApp/Student';\nimport React from 'react'\nimport { MappedResults } from './StudentMentorApp/MappedResults';\n\nfunction App() {\n  const [mentors, setMentors] = React.useState([]);\n  const [students, setStudents] = React.useState([]);\n  const [mappedsStudents, setMappedStudents] = React.useState([]);\n  const [visible, setVisible] = React.useState(false);\n  const [text, setText] = React.useState('')\n  const onDismiss = () => setVisible(false);\n\n\n  React.useEffect(() => {\n    fetch('https://hidden-plains-54398.herokuapp.com/students').then((data) => data.json())\n      .then((data) => {\n        setStudents(students.concat(data.filter(i => i.availability)))\n        setMappedStudents(students.concat(data.filter(i => !i.availability)))\n      })\n    fetch('https://hidden-plains-54398.herokuapp.com/mentors').then((data) => data.json())\n      .then((data) => {\n        setMentors(mentors.concat(data))\n      })\n  }, [])\n\n  const saveMentor = async (val) => {\n    await fetch('https://hidden-plains-54398.herokuapp.com/mentor', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: val\n      })\n    })\n    window.location.reload()\n  }\n\n  const saveStudent = async (val) => {\n    console.log(val)\n    await fetch('https://hidden-plains-54398.herokuapp.com/student', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: val\n      })\n    });\n    window.location.reload()\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container mt-5 mb-5\">\n        <Alert isOpen={visible} toggle={onDismiss}>text</Alert>\n      </div>\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <Students students={students} mentors={mentors} saveStudent={saveStudent} />\n          </div>\n          <div className=\"col-sm-6\">\n            <Mentors mentors={mentors} saveMentor={saveMentor} />\n          </div>\n        </div>\n        <div className=\"row mt-3 mb-3\">\n          <div className=\"col-sm-12\">\n\n            <MappedResults students={mappedsStudents} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}